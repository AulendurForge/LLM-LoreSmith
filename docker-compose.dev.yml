version: '3.8'

services:
  # Frontend React Application with hot reloading
  frontend:
    build:
      context: ./frontend
      dockerfile: ../infrastructure/docker/frontend/dev.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:5000/api
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true  # Add for webpack/vite polling
      - FAST_REFRESH=false      # Disable fast refresh temporarily
      - VITE_FORCE_HMR=true     # Force HMR updates
    depends_on:
      - backend
    networks:
      - loresmith-network
    # Override default command if needed
    # command: npm start -- --host 0.0.0.0

  # Backend API Service - Using same as in main docker-compose.yml
  backend:
    build:
      context: ./backend
      dockerfile: ../infrastructure/docker/backend/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/loresmith
      - VLLM_SERVICE_URL=http://vllm-service:8000
      - JWT_SECRET=dev_secret_key_change_in_production
      - CORS_ORIGINS=http://localhost:3000
    depends_on:
      - postgres
      - redis
    networks:
      - loresmith-network

  # Define the postgres service completely instead of extending
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=loresmith
    networks:
      - loresmith-network

  # Define redis service completely
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - loresmith-network

volumes:
  postgres-data:
  redis-data:

networks:
  loresmith-network:
    driver: bridge 